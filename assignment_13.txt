QUES 1
IndentationError and ZeroDivisionError

a=3
if a<4:
    try:
        a=a/(a-3)
    except ZeroDivisionError:
        print("division by zero is an error") #handles ZeroDivisioError i.e if no. is divided by zero exception will occur and handled.
    else:
        print(a) #will print when no error occurs

OUTPUT
division by zero is an error


QUES 2
IndexError
try:
    l=[1,2,3]
    print(l[3])
except IndexError:
    print("index out of range. please recheck") #handles IndexError i.e if element at index not present is accessed.
else:
    print(l[3]) #will print if no error occurs


OUTPUT
index out of range. please recheck


QUES 3
OUTPUT
An exception
Traceback (most recent call last):
  File "C:/Users/lenovo/PycharmProjects/untitled5/exception.py", line 2, in <module>
    raise NameError("Hi there")  # Raise Error
NameError: Hi there


QUES 4
def AbyB(a , b):
	try:
		c = ((a+b) / (a-b))
	except ZeroDivisionError:
		print("a/b result in 0")
	else:
		print(c)

# Driver program to test above function
AbyB(2.0, 3.0)
AbyB(3.0, 3.0)

OUTPUT
-5.0 -> because there is no error as denominator is not equal to zero
a/b result in 0 -> error occured as denominator will be zero

QUES 5
ValueError*********

try:
    a=int(input("enter no."))

except ValueError:
    print("value should be a number only")
else:
    print("no error occurred")

OUTPUT
enter no.t
value should be a number only

IndexError***********
try:
    l=[1,2,3]
    print(l[4])

except IndexError:
    print("index is out of range!Try again")
else:
    print("no error occurred")

OUTPUT
index is out of range!Try again

ImportError*******
try:
    import foo.tasts
except ImportError:
    print("module not present")
else:
    print("no error occurred")

OUTPUT
module not present


QUES 6
class Error(Exception):
    """
    base class for other exceptions
    """
    pass
class AgeTooSmallError(Error):
    """
    it is raised when entered age is less than18 yrs
    """
    pass
while True:
    try:
        a=int(input("enter age:"))
        if a<18:
            raise AgeTooSmallError('age cannot be less than 18')
        break
    except AgeTooSmallError:
        print("age cannot be less than 18")
print(" correct age")

OUTPUT
enter age:12
age cannot be less than 18
enter age:3
age cannot be less than 18
enter age:56
 correct age
